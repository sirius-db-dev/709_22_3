drop table if exists games, feedbacks cascade;

create table games
(
	id int primary key
		generated by default as identity,
	name text,
	genre text,
	price int
);

insert into games(name, genre, price) values
('Counter-Strike 2', 'shooter', 0),
('The witcher', 'action-adventure', 800);

create table feedbacks
(
	id int primary key
		generated by default as identity,
	game_id int references games,
	txt text,
	mark int
);

insert into feedbacks(game_id, txt, mark) values
(1, 'Usual shooter', 4),
(1, 'The best game in the world!', 5),
(2, 'Only legendary players play this game', 5);

select
	g.id,
	g.name,
	g.genre,
	g.price,
	coalesce(jsonb_agg(jsonb_build_object(
	'id', f.id, 'game_id', f.game_id, 'txt', f.txt, 'mark', f.mark))
	filter (where f.id is not null), '[]') as feedback
from games g
left join feedbacks f on f.game_id = g.id
group by g.id;
