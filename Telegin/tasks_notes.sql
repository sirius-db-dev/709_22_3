drop table if exists task, notes cascade;

create table tasks
(
	id int primary key
		generated by default as identity,
	name text,
	decription text,
	complexity text
);

insert into tasks(name, decription, complexity) values
('DB', 'Control work', 'difficult'),
('Programming', 'homework', 'medium');

create table notes
(
	id int primary key
		generated by default as identity,
	task_id int references games,
	txt text,
	date_of_publication date
);

insert into notes(task_id, txt, date_of_publication) values
(1, 'There are 3 tables, which you need to do', '2024-2-16'),
(2, 'You got personal hw. You are doing it for one term', '2023-09-17'),
(1, 'For each example, output related entities <in one query>', '2024-2-16');

select
	t.id,
	t.name,
	t.decription,
	t.complexity,
	coalesce(jsonb_agg(jsonb_build_object(
	'id', n.id, 'task_id', n.task_id, 'txt', n.txt, 'publication_date', n.date_of_publication))
	filter (where n.id is not null), '[]') as note
from tasks t
left join notes n on n.task_id = t.id
group by t.id;
